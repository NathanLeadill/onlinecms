[{"/Users/nathanleadill/Documents/Projects/flick/src/reportWebVitals.js":"1","/Users/nathanleadill/Documents/Projects/flick/src/App.js":"2","/Users/nathanleadill/Documents/Projects/flick/src/Constants/index.js":"3","/Users/nathanleadill/Documents/Projects/flick/src/index.js":"4","/Users/nathanleadill/Documents/Projects/flick/src/Components/Advert/index.js":"5","/Users/nathanleadill/Documents/Projects/flick/src/Pages/LandingPage/index.js":"6","/Users/nathanleadill/Documents/Projects/flick/src/Pages/WebsitePage/index.js":"7"},{"size":362,"mtime":1606222459440,"results":"8","hashOfConfig":"9"},{"size":586,"mtime":1606271737221,"results":"10","hashOfConfig":"9"},{"size":61,"mtime":1606223848590,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1606222459439,"results":"12","hashOfConfig":"9"},{"size":394,"mtime":1606229862896,"results":"13","hashOfConfig":"9"},{"size":3629,"mtime":1606272848563,"results":"14","hashOfConfig":"9"},{"size":771,"mtime":1606272984488,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6g9w0e",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathanleadill/Documents/Projects/flick/src/reportWebVitals.js",[],"/Users/nathanleadill/Documents/Projects/flick/src/App.js",[],"/Users/nathanleadill/Documents/Projects/flick/src/Constants/index.js",["33"],"/Users/nathanleadill/Documents/Projects/flick/src/index.js",[],["34","35"],"/Users/nathanleadill/Documents/Projects/flick/src/Components/Advert/index.js",["36"],"import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    advertImage: {\n        width: '80%',\n        margin: '0 auto',\n        textAlign: 'center'\n    }\n  }));\nexport default function Advert(props) {\n    const classes = useStyles();\n    return (    \n        <img className={classes.advertImage} src={props.img} />\n    )\n}","/Users/nathanleadill/Documents/Projects/flick/src/Pages/LandingPage/index.js",["37","38","39","40","41"],"\nimport React, { useEffect, useState } from 'react';\nimport Constants from '../../Constants/index'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CssBaseline, Grid, List, ListItem, Paper, TextField, Typography } from '@material-ui/core';\n\nimport * as website from '../../website.json'\nimport { LockTwoTone } from '@material-ui/icons';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // display: 'flex',\n  },\n  toolbar: {\n    minHeight: '0px',\n  },\n  content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n    },\n    contentContainer: {\n        marginLeft: Constants.drawerWidth,\n        backgroundColor:' #fafafa',\n        boxShadow: 'none',\n  },\n    welcomeTitle: {\n        padding: '15px',\n    },\n    headingContainer: {\n        padding: '15px'\n    },\n    formMargin: {\n        margin: '10px 0, 10px, 0',\n        padding: '20px 0 20px 0',\n    },\n    formInputText: {\n        width: '100%',\n    }\n}));\n/**\n * I know i used some main and div classes here but i need to to ensure the page is layed iout properly its the standard practice.\n */\nexport default function LandingPage() {\n    const content =  website.default;\n    console.log(content);\n    const classes = useStyles(); \n    const [websiteName, setWebsiteName] = useState();\n    const [interviewLink, setInterviewLink] = useState();\n    const handleSetWebsite = () => {\n        const test = {\n            websiteName,\n            interviewLink,\n        }\n\n        localStorage.setItem('website', JSON.stringify(test))\n    }\n    return (\n        <div className={classes.root}>\n            <main className={classes.content}>\n                <Paper className={classes.headingContainer}>\n                    <Grid container>\n                        <Grid item xs={12} >\n                            <Typography variant=\"subtitle2\">Please change your site how you see feel</Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container >\n                        <Grid item xs={12} className={classes.formMargin}>\n                            <TextField\n                            id=\"outlined-helperText\"\n                            label=\"Website Name\"\n                            defaultValue={content.websiteName}\n                            helperText=\"This will be the top logo\"\n                            variant=\"outlined\"\n                            value={websiteName}\n                            className={classes.formInputText}\n                            onChange={(e) => setWebsiteName(e.target.value)}\n\n                            />\n                        </Grid>\n                        <Grid item xs={12} className={classes.formMargin}>\n                            <TextField\n                            id=\"outlined-helperText\"\n                            label=\"Video Link\"\n                            defaultValue={content.interviewLink}\n                            helperText=\"This will be the video link for everyone to join\"\n                            variant=\"outlined\"\n                            className={classes.formInputText}\n                            onChange={(e) => setInterviewLink(e.target.value)}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <Button onClick={handleSetWebsite}>Save</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n           \n        </div>\n        )\n}","/Users/nathanleadill/Documents/Projects/flick/src/Pages/WebsitePage/index.js",[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":1,"nodeType":"44","endLine":5,"endColumn":2},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":13,"column":9,"nodeType":"51","endLine":13,"endColumn":64},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":5,"column":18,"nodeType":"54","messageId":"55","endLine":5,"endColumn":29},{"ruleId":"52","severity":1,"message":"57","line":5,"column":37,"nodeType":"54","messageId":"55","endLine":5,"endColumn":41},{"ruleId":"52","severity":1,"message":"58","line":5,"column":43,"nodeType":"54","messageId":"55","endLine":5,"endColumn":51},{"ruleId":"52","severity":1,"message":"59","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":21},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'LockTwoTone' is defined but never used.","no-global-assign","no-unsafe-negation"]